#include <stdio.h>
#include <stdlib.h>

struct Node{
    int val;
    struct Node* next;
};
struct Node* createNode(){
    return (struct Node*)malloc(sizeof(struct Node));
}
void enqueue(struct Node** head ,int val){
    if(*head == NULL){
        struct Node * temp = createNode();
        temp->val = val;
        *head = temp;
    }
    else if ((*head)->val < val){
        struct Node * temp = createNode();
        temp->val = val;
        temp->next=*head;
        *head = temp;
    }
    else{
        struct Node* ptr = *head;
        while(ptr->next!=NULL && ptr->next->val > val){
            ptr = ptr->next;
        }
        struct Node * temp = createNode();
        temp->val = val;
        temp->next=ptr->next;
        ptr->next=temp;
        
    }
     
}
void dequeue(struct Node**head){
    struct Node* temp = *head;
    *head=(*head)->next;
    free(temp);
    printf("Item Deleted Sucessfully!\n");
}
void display(struct Node* head){
    if(head==NULL){
        printf("Queue is empty\n");
        return;
    }
    while(head!=NULL){
        printf("%d ",head->val);
        head=head->next;
    }
    printf("\n");
}
int main() {
  struct Node * head = NULL;
    while(1){
        printf("1.ADD\n2.Delete\n3.Display\n4.Exit\n");
        int choice;
        scanf("%d",&choice);
        if(choice==1){
            int item,priority;
            printf("Enter the item : ");
            scanf("%d",&item);
            enqueue(&head,item);
        }
        else if(choice==2) dequeue(&head);
        else if(choice==3)display(head);
        else if(choice==4)return 0;
        else printf("Wrong input\n");
    }
    
    

    return 0;
}
